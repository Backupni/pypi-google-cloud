tags: ['pypi']

steps:
  # Calculate package hash
  - name: python:3.8.2-alpine3.11
    entrypoint: 'sh'
    args: ['-c', 'python3 -m pip hash -a "${_ALGORITHM}" "${_WHL_NAME}.whl" | tr -d "[:space:]" | cut -d":" -f3 > hash']
    id: 'calculate-hash'
  # Calculate package upload timestamp
  - name: busybox
    entrypoint: 'sh'
    args: ['-c', 'stat -c "%Y" "${_WHL_NAME}.whl" > upload_timestamp']
    waitFor: ['-']
    id: 'calculate-upload-timestamp'
  # Generate package metadata
  - name: busybox
    entrypoint: 'sh'
    args: ['-c', 'echo -n "{\"filename\": \"${_WHL_NAME}.whl\", \"hash\": \"${_ALGORITHM}=$(cat hash)\", \"uploaded_by\": \"${_USER}\", \"upload_timestamp\": $(cat upload_timestamp)}" > "${_WHL_NAME}.whl.meta"']
    waitFor: ['calculate-hash', 'calculate-upload-timestamp']
  # Upload Python package
  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', '${_WHL_NAME}.whl', 'gs://${_PACKAGES_BUCKET}']
  # Upload Python package meta data
  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', '${_WHL_NAME}.whl.meta', 'gs://${_META_DATA_BUCKET}']

  # Builder service steps copy
  # Download all Python packages meta data
  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', '-r', 'gs://${_META_DATA_BUCKET}', '.']
    dir: '/workspace/metadata'
  # Create config
  - name: busybox
    entrypoint: 'sh'
    args: ['-c', 'cat metadata/${_META_DATA_BUCKET}/*.meta > files.txt']
  # Generate new repository static files
  - name: eu.gcr.io/${PROJECT_ID}/dumb-pypi:latest
    args: ['--package-list-json', 'files.txt', '--output-dir', 'static', '--packages-url', 'https://${_DOMAIN}/${_DIR}/']
  # Sync repository
  - name: gcr.io/cloud-builders/gsutil
    args: ['-m', 'rsync', '-r', '-d', '-x', '".*json$"', 'static', 'gs://${_STATIC_BUCKET}/']

substitutions:
  _ALGORITHM: sha256
  _DIR: raw
  _USER: CI
